name: 'Semrel'

on:
  workflow_call:
    inputs:
      branch:
        description: 'Branch to check out'
        type: string
        required: false
        default: 'main'
    outputs:
      current-version:
        description: 'The current version'
        value: ${{ jobs.semrel.outputs.current-version }}
      next-version:
        description: 'The next version'
        value: ${{ jobs.semrel.outputs.next-version }}
      release-notes:
        description: 'The release notes for the next version'
        value: ${{ jobs.semrel.outputs.release-notes }}
      log:
        description: 'The commit log for the next version'
        value: ${{ jobs.semrel.outputs.log }}

jobs:
  semrel:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.set-outputs.outputs.current-version }}
      next-version: ${{ steps.set-outputs.outputs.next-version }}
      release-notes: ${{ steps.set-outputs.outputs.release-notes }}
      log: ${{ steps.set-outputs.outputs.log }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get latest semrel release
        id: get-latest-release
        run: |
          release_data=$(curl --silent "https://api.github.com/repos/brianbruggeman/semrel/releases/latest")
          tag_name=$(echo "$release_data" | jq -r .tag_name)
          assets=$(echo "$release_data" | jq -r '.assets[]')
          good_assets=$(echo "$assets" | jq -r 'select(.name == "semrel-${tag_name}-x86_64-unknown-linux-musl.tgz")')
          found_asset_id=$(echo "$good_assets" | jq -r '.id')
          asset_id=$(echo "$release_data" | jq -r '.assets[] | select(.name == "semrel-${tag_name}-x86_64-unknown-linux-musl.tgz") | .id')
          asset_url=$(echo "https://api.github.com/repos/brianbruggeman/semrel/releases/assets/$asset_id")
          semrel_filename=$(echo "semrel-$tag_name-x86_64-unknown-linux-musl")

          echo "release_data=${release_data}"
          echo "assets=${assets}"
          echo "good_assets=${good_assets}"
          echo "found_asset_id=${found_asset_id}"
          echo "tag_name=${tag_name}"
          echo "asset_id=${asset_id}"
          echo "asset_url=${asset_url}"
          echo "semrel_filename=${semrel_filename}"

          echo "tag_name=$tag_name" >> $GITHUB_ENV
          echo "asset_url=$asset_url" >> $GITHUB_ENV
          echo "semrel_filename=$semrel_filename" >> $GITHUB_ENV

      - name: Download and extract semrel
        run: |
          curl -L -H "Accept: application/octet-stream" -o ${{ env.semrel_filename }}.tgz ${{ env.asset_url }}
          tar -xzf ${{ env.semrel_filename }}.tgz -C . --strip-components=1
          chmod +x ${{ env.semrel_filename }}
          mv ${{ env.semrel_filename }} ./semrel

      - name: Set outputs
        id: set-outputs
        run: |
          current_version=$(./semrel show current)
          next_version=$(./semrel show next)
          release_notes=$(./semrel show notes)
          log=$(./semrel show log)

          echo "::set-output name=current-version::$current_version"
          echo "::set-output name=next-version::$next_version"
          echo "::set-output name=release-notes::$release_notes"
          echo "::set-output name=log::$log"