name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semrel:
    runs-on: ubuntu-latest
    outputs:
        current-version: ${{ steps.semrel.outputs.current-version }}
        log: ${{ steps.semrel.outputs.log }}
        next-version: ${{ steps.semrel.outputs.next-version }}
        release-notes: ${{ steps.semrel.outputs.release-notes }}
        version-changed: ${{ steps.semrel.outputs.version-changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run semrel
        id: semrel
        uses: brianbruggeman/semrel@main

  cross-build:
    needs: [semrel]
    if: ${{ needs.semrel.outputs.version-changed == 'true' }}
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
            targets: ${{ matrix.target }}
      - name: Cache Cross
        id: cache-cross
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cross
          key: ${{ matrix.os }}-cross
      - name: Check if Cross is installed
        if: steps.cache-cross.outputs.cache-hit == 'true'
        id: cross-check
        run: |
          if command -v cross &> /dev/null
          then
            echo "::set-output name=installed::true"
          else
            echo "::set-output name=installed::false"
          fi
      - name: Install Cross
        if: steps.cross-check.outputs.installed != 'true'
        run: cargo install cross
      - name: Cross Build
        run: |
          cross build --target ${{ matrix.target }} --release
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/semrel

  native-build:
    needs: [semrel]
    if: ${{ needs.semrel.outputs.next-version != needs.semrel.outputs.current-version }}
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          override: true
      - name: Build
        run: |
          cargo build --release --target=${{ matrix.target }}
      - name: Archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/semrel

  release:
    needs: [semrel, cross-build, native-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Install tar
        run: sudo apt-get install tar
      - name: Set permissions on artifacts
        run: |
          chmod +x aarch64-apple-darwin/semrel
          chmod +x x86_64-apple-darwin/semrel
          chmod +x aarch64-unknown-linux-musl/semrel
          chmod +x x86_64-unknown-linux-musl/semrel
      - name: Update artifact names
        run: |
          mv aarch64-apple-darwin/semrel aarch64-apple-darwin/semrel-${{ needs.semrel.outputs.next-version }}-amd64-apple-darwin
          mv x86_64-apple-darwin/semrel x86_64-apple-darwin/semrel-${{ needs.semrel.outputs.next-version }}-x86_64-apple-darwin
          mv aarch64-unknown-linux-musl/semrel aarch64-unknown-linux-musl/semrel-${{ needs.semrel.outputs.next-version }}-aarch64-unknown-linux-musl
          mv x86_64-unknown-linux-musl/semrel x86_64-unknown-linux-musl/semrel-${{ needs.semrel.outputs.next-version }}-x86_64-unknown-linux-musl
          echo "Path: ${PATH}"
          cp x86_64-unknown-linux-musl/semrel-${{ needs.semrel.outputs.next-version }}-x86_64-unknown-linux-musl ~/.cargo/bin/semrel
      - name: Package Artifacts
        run: |
          tar czvf semrel-${{ needs.semrel.outputs.next-version }}-arm64-apple-darwin.tgz -C aarch64-apple-darwin .
          tar czvf semrel-${{ needs.semrel.outputs.next-version }}-x86_64-apple-darwin.tgz -C x86_64-apple-darwin .
          tar czvf semrel-${{ needs.semrel.outputs.next-version }}-aarch64-unknown-linux-musl.tgz -C aarch64-unknown-linux-musl .
          tar czvf semrel-${{ needs.semrel.outputs.next-version }}-x86_64-unknown-linux-musl.tgz -C x86_64-unknown-linux-musl .
      - name: Install semrel
        uses: brianbruggeman/semrel@main
      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          semrel update
          cargo update
          git add Cargo.toml Cargo.lock
          # Create a nice log
          printf "semrel: %s\n\n%s\n\n# Log\n%s\n" \
          "${{ needs.semrel.outputs.next-version }}" \
          "$(echo '${{ needs.semrel.outputs.release-notes }}' | base64 --decode)" \
          "$(echo '${{ needs.semrel.outputs.log }}' | base64 --decode)" \
          | git commit -F -
          git remote set-url origin https://x-access-token:${{ secrets.RELEASE_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin HEAD:main
      - name: Create Release Notes
        run: printf "%s" "${{ needs.semrel.outputs.release-notes }}" | base64 --decode > release-notes-${{ needs.semrel.outputs.next-version }}.md
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          files: |
            semrel-${{ needs.semrel.outputs.next-version }}-arm64-apple-darwin.tgz
            semrel-${{ needs.semrel.outputs.next-version }}-x86_64-apple-darwin.tgz
            semrel-${{ needs.semrel.outputs.next-version }}-aarch64-unknown-linux-musl.tgz
            semrel-${{ needs.semrel.outputs.next-version }}-x86_64-unknown-linux-musl.tgz
          name: semrel-${{ needs.semrel.outputs.next-version }}
          body_path: release-notes-${{ needs.semrel.outputs.next-version }}.md
          generate_release_notes: false
          make_latest: true
          draft: false
          prerelease: false
          tag_name: ${{ needs.semrel.outputs.next-version }}
          token: ${{ secrets.RELEASE_TOKEN }}
