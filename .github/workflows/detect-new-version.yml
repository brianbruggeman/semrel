name: Detect New Version

on:
  workflow_call:
    secrets:
      GITHUB_TOKEN:
        required: true

jobs:
  detect-new-version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.get-current-version.outputs.current-version }}
      next-version: ${{ steps.set-new-version.outputs.next-version }}
      release-notes: ${{ steps.get-release-notes.outputs.release-notes }}
      log: ${{ steps.get-log.outputs.log }}
    steps:
      - name: Install jq
        run: sudo apt-get install jq
      - name: Get latest semrel release
        id: get-latest-release
        run: |
          release_data=$(curl --silent -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          echo "Release data: $release_data"
          tag_name=$(echo "$release_data" | jq -r .tag_name)
          echo "::set-output name=tag_name::$tag_name"
          asset_id=$(echo "$release_data" | jq -r '.assets[] | select(.name == "semrel-'${tag_name}'-x86_64-unknown-linux-musl.tgz") | .id')
          echo "Asset ID: $asset_id"
          asset_url="https://api.github.com/repos/${{ github.repository }}/releases/assets/${asset_id}"
          echo "Asset URL: $asset_url"
          echo "::set-output name=asset_url::$asset_url"
      - name: Download and extract semrel
        id: download-semrel
        run: |
          asset_url=${{ steps.get-latest-release.outputs.asset_url }}
          echo "Downloading from $asset_url"
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/octet-stream" -o semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz "$asset_url"
          if [ $? -ne 0 ]; then
            echo "Failed to download the file. Response from curl:"
            exit 1
          fi
          echo "Checking file content:"
          tar -tf semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz
          mkdir -p .cargo/bin
          tar -xzf semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz -C .cargo/bin --strip-components=1
          chmod +x .cargo/bin/semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl
          mv .cargo/bin/semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl .cargo/bin/semrel
          echo "Downloaded and extracted semrel"
          echo "show folder content:"
          ls -lashtr .cargo/bin
          echo "Checking file size:"
          du -sh .cargo/bin/semrel
          echo "Checking file type:"
          file .cargo/bin/semrel
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
      - name: Get current version
        id: get-current-version
        run: echo "::set-output name=current-version::$(semrel show current)"
      - name: Get new version
        id: set-new-version
        run: echo "::set-output name=next-version::$(semrel show next)"
      - name: Get release notes
        id: get-release-notes
        run: echo "::set-output name=release-notes::$(semrel show notes)"
      - name: Get Log
        id: get-log
        run: echo "::set-output name=log::$(semrel show log)"