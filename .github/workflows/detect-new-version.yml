name: Detect New Version

on:
  workflow_call:
    secrets:
      token:
        required: true

jobs:
  detect-new-version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.set-outputs.outputs.current-version }}
      next-version: ${{ steps.set-outputs.outputs.next-version }}
      release-notes: ${{ steps.set-outputs.outputs.release-notes }}
      log: ${{ steps.set-outputs.outputs.log }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main
          fetch-depth: 0
      - name: Install jq
        run: sudo apt-get install jq
      - name: Get latest semrel release
        id: get-latest-release
        run: |
          set -e
          release_data=$(curl --silent -H "Authorization: token ${{ secrets.token }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          echo "Release data: $release_data"
          tag_name=$(echo "$release_data" | jq -r .tag_name)
          echo "::set-output name=tag_name::$tag_name"
          asset_id=$(echo "$release_data" | jq -r '.assets[] | select(.name == "semrel-'${tag_name}'-x86_64-unknown-linux-musl.tgz") | .id')
          echo "Asset ID: $asset_id"
          asset_url="https://api.github.com/repos/${{ github.repository }}/releases/assets/${asset_id}"
          echo "Asset URL: $asset_url"
          echo "::set-output name=asset_url::$asset_url"
      - name: Semrel commands
        id: set-outputs
        run: |
          set -e
          asset_url=${{ steps.get-latest-release.outputs.asset_url }}
          echo "Downloading from $asset_url"
          curl -L -H "Authorization: token ${{ secrets.token }}" -H "Accept: application/octet-stream" -o semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz "$asset_url"
          if [ $? -ne 0 ]; then
            echo "Failed to download the file. Response from curl:"
            exit 1
          fi
          echo "Checking file content:"
          tar -tf semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz
          tar -xzf semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl.tgz -C . --strip-components=1
          chmod +x ./semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl
          mv ./semrel-${{ steps.get-latest-release.outputs.tag_name }}-x86_64-unknown-linux-musl ./semrel
          echo "Downloaded and extracted semrel"
          echo "show folder content:"
          ls -lashtr .
          echo "Checking file size:"
          du -sh ./semrel
          echo "Checking file type:"
          file ./semrel
          current_version=$(./semrel show current)
          echo "Current version: $current_version"
          echo "::set-output name=current-version::$current_version"

          next_version=$(./semrel show next)
          echo "Next version: $next_version"
          echo "::set-output name=next-version::$next_version"

          release_notes=$(./semrel show notes)
          echo "Release notes: $release_notes"
          echo "::set-output name=release-notes::$release_notes"

          log=$(./semrel show log)
          echo "Log: $log"
          echo "::set-output name=log::$log"
