name: 'Semrel'
description: 'GitHub Action to detect new versions and generate release notes using semrel'
author: 'Brian Bruggeman'
inputs:
  branch:
    description: 'Branch to check out'
    required: false
    default: 'main'
outputs:
  current-version:
    description: 'The current version'
  next-version:
    description: 'The next version'
  release-notes:
    description: 'The release notes for the next version'
  log:
    description: 'The commit log for the next version'
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.branch }}
        fetch-depth: 0

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Get latest semrel release
      id: get-latest-release
      run: |
        release_data=$(curl --silent "https://api.github.com/repos/brianbruggeman/semrel/releases/latest")
        tag_name=$(echo "$release_data" | jq -r .tag_name)
        assets=$(echo "$release_data" | jq -r '.assets[]')
        asset_tag=$(echo "semrel-${tag_name}-x86_64-unknown-linux-musl.tgz")
        good_assets=$(echo "$assets" | jq -r 'select(.name == "${asset_tag}")')
        found_asset_id=$(echo "$good_assets" | jq -r '.id')
        asset_id=$(echo "$release_data" | jq -r --arg asset_tag "$asset_tag" '.assets[] | select(.name == $asset_tag) | .id')
        asset_url=$(echo "https://api.github.com/repos/brianbruggeman/semrel/releases/assets/$asset_id")
        semrel_filename=$(echo "semrel-$tag_name-x86_64-unknown-linux-musl")

        echo "release_data=${release_data}"
        echo "assets=${assets}"
        echo "tag_name=${tag_name}"
        echo "asset_tag=${asset_tag}"
        echo "good_assets=${good_assets}"
        echo "found_asset_id=${found_asset_id}"
        echo "asset_id=${asset_id}"
        echo "asset_url=${asset_url}"
        echo "semrel_filename=${semrel_filename}"

        echo "tag_name=$tag_name" >> $GITHUB_ENV
        echo "asset_url=$asset_url" >> $GITHUB_ENV
        echo "semrel_filename=$semrel_filename" >> $GITHUB_ENV

    - name: Download and extract semrel
      run: |
        curl -L -H "Accept: application/octet-stream" -o ${{ env.semrel_filename }}.tgz ${{ env.asset_url }}
        tar -xzf ${{ env.semrel_filename }}.tgz -C . --strip-components=1
        chmod +x ${{ env.semrel_filename }}
        mv ${{ env.semrel_filename }} ./semrel

    - name: Set outputs
      id: set-outputs
      run: |
        current_version=$(./semrel show current)
        next_version=$(./semrel show next)
        release_notes=$(./semrel show notes)
        log=$(./semrel show log)

        echo "::set-output name=current-version::$current_version"
        echo "::set-output name=next-version::$next_version"
        echo "::set-output name=release-notes::$release_notes"
        echo "::set-output name=log::$log"